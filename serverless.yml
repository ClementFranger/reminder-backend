service: reminder

package:
  individually: true

plugins:
  - serverless-python-requirements

provider:
  name: aws
  runtime: python3.7
  stage: master
  region: eu-west-3

  environment:
    ACCOUNT: '166257563783'
    AWS_UTILS: 2
    REMINDER_TABLE: '${self:service}'

  iamRoleStatements:
    - Effect: Allow
      Action:
       - dynamodb:GetItem
       - dynamodb:PutItem
       - dynamodb:Scan
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.REMINDER_TABLE}"

functions:
  put:
    handler: reminder/lambdas.put
    events:
      - http:
          path: reminder
          method: post
          cors: true
    layers:
      - "arn:aws:lambda:${opt:region, self:provider.region}:${self:provider.environment.ACCOUNT}:layer:aws-utils-${self:provider.stage}:${self:provider.environment.AWS_UTILS}"
  today:
    handler: reminder/lambdas.today
    events:
      - http:
          path: reminder
          method: get
    layers:
      - "arn:aws:lambda:${opt:region, self:provider.region}:${self:provider.environment.ACCOUNT}:layer:aws-utils-${self:provider.stage}:${self:provider.environment.AWS_UTILS}"